version: '3.8'

services:
  medical-dashboard:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5000:8080"
    environment:
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - PORT=8080
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID}
      - FIREBASE_SERVICE_ACCOUNT_KEY=serviceAccountKey.json
      - SECRET_KEY=${SECRET_KEY:-dev-secret-key}
      - AUTO_REFRESH_INTERVAL=${AUTO_REFRESH_INTERVAL:-300000}
      - MAX_RECORDS_PER_TABLE=${MAX_RECORDS_PER_TABLE:-1000}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - .:/app
      - /app/venv  # Exclude virtual environment from volume
      - /app/__pycache__  # Exclude Python cache
    env_file:
      - .env
    depends_on:
      - redis
    networks:
      - medical-dashboard-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/refresh-status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - medical-dashboard-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Optional: Firebase Emulator for local development
  firebase-emulator:
    image: gcr.io/firebase-tools-docker/firebase-tools:latest
    ports:
      - "4000:4000"  # Firebase UI
      - "8080:8080"  # Firestore
      - "9099:9099"  # Auth
      - "5001:5001"  # Functions
    volumes:
      - .:/workspace
    working_dir: /workspace
    command: firebase emulators:start --only firestore,auth --host 0.0.0.0
    networks:
      - medical-dashboard-network
    profiles:
      - emulator
    environment:
      - FIREBASE_PROJECT=${FIREBASE_PROJECT_ID:-demo-project}

  # Optional: Nginx reverse proxy for production-like setup
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - medical-dashboard
    networks:
      - medical-dashboard-network
    profiles:
      - production
    restart: unless-stopped

volumes:
  redis_data:
    driver: local

networks:
  medical-dashboard-network:
    driver: bridge